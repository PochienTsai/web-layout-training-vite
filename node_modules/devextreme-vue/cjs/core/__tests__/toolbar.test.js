/*!
 * devextreme-vue
 * Version: 23.2.3
 * Build date: Tue Nov 28 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */

"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var test_utils_1 = require("@vue/test-utils");
var vue_1 = require("vue");
var button_1 = __importDefault(require("../../button"));
var toolbar_1 = __importStar(require("../../toolbar"));
jest.setTimeout(1000);
beforeEach(function () {
    jest.clearAllMocks();
});
describe('template rendering', function () {
    it('should render a default template only for a configuration component where it is declared', function () {
        var vm = vue_1.defineComponent({
            template: "<dx-toolbar id=\"component\">\n                    <dx-item location=\"before\">\n                        <template #default>\n                            <dx-button text=\"test\" />\n                        </template>\n                    </dx-item>\n                    <dx-item location=\"center\"></dx-item>\n                </dx-toolbar>",
            components: {
                DxToolbar: toolbar_1.default,
                DxItem: toolbar_1.DxItem,
                DxButton: button_1.default,
            },
        });
        var wrapper = test_utils_1.mount(vm);
        expect(wrapper.vm.$el.getElementsByClassName('dx-button')).toHaveLength(1);
    });
});
